{"ast":null,"code":"import _regeneratorRuntime from\"/Users/kishank/Desktop/Event-Manager/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/kishank/Desktop/Event-Manager/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var eventServices={get:function(){var _get=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(limit){var promise,events;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"http://localhost:4000/event?limit=\".concat(limit));case 2:promise=_context.sent;_context.next=5;return promise.json();case 5:events=_context.sent;return _context.abrupt(\"return\",events);case 7:case\"end\":return _context.stop();}}},_callee);}));function get(_x){return _get.apply(this,arguments);}return get;}(),create:function create(data){return fetch('http://localhost:4000/event/create',{method:'POST',body:JSON.stringify(data),headers:{'Content-type':'application/json'},credentials:'include'}).then(function(res){return res.json();});},edit:function edit(id,data){debugger;return fetch('http://localhost:4000/event/edit/'+id,{method:'PUT',body:JSON.stringify(data),headers:{'Content-type':'application/json'},credentials:'include'}).then(function(res){return res.json();});},delete:function _delete(id){return fetch('http://localhost:4000/event/delete/'+id,{method:'DELETE',credentials:'include'}).then(function(res){return res.json();});},like:function like(id){return fetch('http://localhost:4000/event/like/'+id,{method:'PUT',headers:{'Content-type':'application/json'},credentials:'include'}).then(function(res){return res.json();});},dislike:function dislike(id){return fetch('http://localhost:4000/event/dislike/'+id,{method:'PUT',headers:{'Content-type':'application/json'},credentials:'include'}).then(function(res){return res.json();});},details:function(){var _details=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id){var promise,event;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"http://localhost:4000/event/details/\".concat(id),{method:'GET',headers:{'Content-type':'application/json'},credentials:'include'});case 2:promise=_context2.sent;_context2.next=5;return promise.json();case 5:event=_context2.sent;return _context2.abrupt(\"return\",event);case 7:case\"end\":return _context2.stop();}}},_callee2);}));function details(_x2){return _details.apply(this,arguments);}return details;}()};export default eventServices;","map":{"version":3,"sources":["/Users/kishank/Desktop/Event-Manager/client/src/services/event-services.js"],"names":["eventServices","get","limit","fetch","promise","json","events","create","data","method","body","JSON","stringify","headers","credentials","then","res","edit","id","delete","like","dislike","details","event"],"mappings":"iUAAA,GAAMA,CAAAA,aAAa,CAAG,CAClBC,GAAG,6EAAE,iBAAeC,KAAf,2JACqBC,CAAAA,KAAK,6CAAsCD,KAAtC,EAD1B,QACKE,OADL,qCAEoBA,CAAAA,OAAO,CAACC,IAAR,EAFpB,QAEKC,MAFL,+CAIMA,MAJN,wDAAF,qEADe,CAOlBC,MAAM,CAAE,gBAASC,IAAT,CAAe,CACnB,MAAOL,CAAAA,KAAK,CAAC,oCAAD,CAAuC,CAC/CM,MAAM,CAAE,MADuC,CAE/CC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAFyC,CAG/CK,OAAO,CAAE,CACL,eAAgB,kBADX,CAHsC,CAM/CC,WAAW,CAAE,SANkC,CAAvC,CAAL,CAOJC,IAPI,CAOC,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACX,IAAJ,EAAJ,EAPJ,CAAP,CAQH,CAhBiB,CAiBlBY,IAAI,CAAE,cAAUC,EAAV,CAAcV,IAAd,CAAoB,CACtB,SACA,MAAOL,CAAAA,KAAK,CAAC,oCAAsCe,EAAvC,CAA2C,CACnDT,MAAM,CAAE,KAD2C,CAEnDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAF6C,CAGnDK,OAAO,CAAE,CACL,eAAgB,kBADX,CAH0C,CAMnDC,WAAW,CAAE,SANsC,CAA3C,CAAL,CAOJC,IAPI,CAOC,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACX,IAAJ,EAAJ,EAPJ,CAAP,CAQH,CA3BiB,CA4BlBc,MAAM,CAAE,iBAAUD,EAAV,CAAc,CAClB,MAAOf,CAAAA,KAAK,CAAC,sCAAwCe,EAAzC,CAA6C,CACrDT,MAAM,CAAE,QAD6C,CAErDK,WAAW,CAAE,SAFwC,CAA7C,CAAL,CAGJC,IAHI,CAGC,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACX,IAAJ,EAAJ,EAHJ,CAAP,CAIH,CAjCiB,CAkClBe,IAAI,CAAE,cAAUF,EAAV,CAAc,CAChB,MAAOf,CAAAA,KAAK,CAAC,oCAAsCe,EAAvC,CAA2C,CACnDT,MAAM,CAAE,KAD2C,CAEnDI,OAAO,CAAE,CACL,eAAgB,kBADX,CAF0C,CAKnDC,WAAW,CAAE,SALsC,CAA3C,CAAL,CAMJC,IANI,CAMC,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACX,IAAJ,EAAJ,EANJ,CAAP,CAOH,CA1CiB,CA2ClBgB,OAAO,CAAE,iBAAUH,EAAV,CAAc,CACnB,MAAOf,CAAAA,KAAK,CAAC,uCAAyCe,EAA1C,CAA8C,CACtDT,MAAM,CAAE,KAD8C,CAEtDI,OAAO,CAAE,CACL,eAAgB,kBADX,CAF6C,CAKtDC,WAAW,CAAE,SALyC,CAA9C,CAAL,CAMJC,IANI,CAMC,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACX,IAAJ,EAAJ,EANJ,CAAP,CAOH,CAnDiB,CAoDlBiB,OAAO,iFAAE,kBAAgBJ,EAAhB,+JACiBf,CAAAA,KAAK,+CAAwCe,EAAxC,EAA8C,CACrET,MAAM,CAAE,KAD6D,CAErEI,OAAO,CAAE,CACL,eAAgB,kBADX,CAF4D,CAKrEC,WAAW,CAAE,SALwD,CAA9C,CADtB,QACCV,OADD,uCAQeA,CAAAA,OAAO,CAACC,IAAR,EARf,QAQCkB,KARD,iDAUEA,KAVF,0DAAF,kFApDW,CAAtB,CAkEA,cAAevB,CAAAA,aAAf","sourcesContent":["const eventServices = {\n    get: async function(limit) {\n        const promise = await fetch(`http://localhost:4000/event?limit=${limit}`);\n        const events = await promise.json();\n\n        return events;\n    },\n    create: function(data) {\n        return fetch('http://localhost:4000/event/create', {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-type': 'application/json'\n            },\n            credentials: 'include'\n        }).then(res => res.json());\n    },\n    edit: function (id, data) {\n        debugger;\n        return fetch('http://localhost:4000/event/edit/' + id, {\n            method: 'PUT',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-type': 'application/json'\n            },\n            credentials: 'include'\n        }).then(res => res.json());\n    },\n    delete: function (id) {\n        return fetch('http://localhost:4000/event/delete/' + id, {\n            method: 'DELETE',\n            credentials: 'include'\n        }).then(res => res.json());\n    },\n    like: function (id) {\n        return fetch('http://localhost:4000/event/like/' + id, {\n            method: 'PUT',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            credentials: 'include'\n        }).then(res => res.json());\n    },\n    dislike: function (id) {\n        return fetch('http://localhost:4000/event/dislike/' + id, {\n            method: 'PUT',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            credentials: 'include'\n        }).then(res => res.json());\n    },\n    details: async function (id) {\n        const promise = await fetch(`http://localhost:4000/event/details/${id}`, {\n            method: 'GET',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            credentials: 'include'\n        });\n        const event = await promise.json();\n\n        return event;\n    }\n}\n\nexport default eventServices;"]},"metadata":{},"sourceType":"module"}