{"ast":null,"code":"const userService = {\n  get: function (id) {\n    return fetch('http://localhost:4000/user/' + id, {\n      method: 'GET',\n      credentials: 'include'\n    }).then(res => res.json());\n  },\n  register: function (data) {\n    return fetch(`http://localhost:4000/user/register`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    }).then(res => res.json()).then(user => sessionStorage.setItem('user', JSON.stringify(user)));\n  },\n  login: function (data) {\n    return fetch(`http://localhost:4000/user/login`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-type': 'application/json'\n      },\n      credentials: 'include'\n    }).then(res => {\n      return res.json();\n    }).then(user => sessionStorage.setItem('user', JSON.stringify(user)));\n  },\n  logout: function () {\n    return fetch(`http://localhost:4000/user/logout`, {\n      method: 'POST',\n      credentials: 'include'\n    }).then(res => res.text()).then(() => sessionStorage.clear());\n  }\n};\nexport default userService;","map":{"version":3,"sources":["/Users/kishank/Desktop/Event-Manager/client/src/services/user-services.js"],"names":["userService","get","id","fetch","method","credentials","then","res","json","register","data","body","JSON","stringify","headers","user","sessionStorage","setItem","login","logout","text","clear"],"mappings":"AAAA,MAAMA,WAAW,GAAG;AAChBC,EAAAA,GAAG,EAAE,UAASC,EAAT,EAAa;AACd,WAAOC,KAAK,CAAC,gCAAgCD,EAAjC,EAAqC;AAC9CE,MAAAA,MAAM,EAAE,KADsC;AAE9CC,MAAAA,WAAW,EAAE;AAFiC,KAArC,CAAL,CAGJC,IAHI,CAGCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHR,CAAP;AAIH,GANe;AAOhBC,EAAAA,QAAQ,EAAE,UAASC,IAAT,EAAe;AACrB,WAAOP,KAAK,CAAE,qCAAF,EAAwC;AAChDC,MAAAA,MAAM,EAAE,MADwC;AAEhDO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAF0C;AAGhDI,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAHuC;AAMhDT,MAAAA,WAAW,EAAE;AANmC,KAAxC,CAAL,CAOJC,IAPI,CAOCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPR,EAOoBF,IAPpB,CAOyBS,IAAI,IAAIC,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+BL,IAAI,CAACC,SAAL,CAAeE,IAAf,CAA/B,CAPjC,CAAP;AAQH,GAhBe;AAiBhBG,EAAAA,KAAK,EAAE,UAASR,IAAT,EAAe;AAClB,WAAOP,KAAK,CAAE,kCAAF,EAAqC;AAC7CC,MAAAA,MAAM,EAAE,MADqC;AAE7CO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAFuC;AAG7CI,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAHoC;AAM7CT,MAAAA,WAAW,EAAE;AANgC,KAArC,CAAL,CAOJC,IAPI,CAOCC,GAAG,IAAI;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,KATM,EASJF,IATI,CASCS,IAAI,IAAIC,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+BL,IAAI,CAACC,SAAL,CAAeE,IAAf,CAA/B,CATT,CAAP;AAUH,GA5Be;AA6BhBI,EAAAA,MAAM,EAAE,YAAW;AACf,WAAOhB,KAAK,CAAE,mCAAF,EAAsC;AAC9CC,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,WAAW,EAAE;AAFiC,KAAtC,CAAL,CAGJC,IAHI,CAGCC,GAAG,IAAIA,GAAG,CAACa,IAAJ,EAHR,EAGoBd,IAHpB,CAGyB,MAAMU,cAAc,CAACK,KAAf,EAH/B,CAAP;AAIH;AAlCe,CAApB;AAqCA,eAAerB,WAAf","sourcesContent":["const userService = {\n    get: function(id) {\n        return fetch('http://localhost:4000/user/' + id, {\n           method: 'GET',\n           credentials: 'include'\n        }).then(res => res.json());\n    },\n    register: function(data) {\n        return fetch(`http://localhost:4000/user/register`, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-type': 'application/json'\n            },\n            credentials: 'include'\n        }).then(res => res.json()).then(user => sessionStorage.setItem('user', JSON.stringify(user)));\n    },\n    login: function(data) {\n        return fetch(`http://localhost:4000/user/login`, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-type': 'application/json'\n            },\n            credentials: 'include'\n        }).then(res => {\n            return res.json();\n        }).then(user => sessionStorage.setItem('user', JSON.stringify(user)));\n    },\n    logout: function() {\n        return fetch(`http://localhost:4000/user/logout`, {\n            method: 'POST',\n            credentials: 'include'\n        }).then(res => res.text()).then(() => sessionStorage.clear());\n    }\n}\n\nexport default userService;"]},"metadata":{},"sourceType":"module"}